# Spring boot application
spring.application.name = dubbo-provider
server.port = 5003
spring.aop.proxy-target-class=false
# Base packages to scan Dubbo Component: @com.alibaba.dubbo.config.annotation.Service
dubbo.scan.basePackages  = com.cnki.provider.service
spring.aop.proxy-target-class=false
# Dubbo Config properties
## ApplicationConfig Bean
dubbo.application.id = dubbo-provider
dubbo.application.name = dubbo-provider

demo.service.version = 1.0.0

## ProtocolConfig Bean
dubbo.protocol.id= = dubbo
dubbo.protocol.name = dubbo
dubbo.protocol.port = 20880
dubbo.protocol.status = server

## RegistryConfig Bean
dubbo.registry.id = my-registry
dubbo.registry.address= zookeeper://192.168.25.142:2181
#dubbo.registry.address= zookeeper://localhost:2181
dubbo.registry.timeout= 100000

## 数据库连接信息  
# 数据库连接URL
spring.datasource.url=jdbc:mysql://192.168.100.66:3306/master_main_db?characterEncoding=utf-8&serverTimezone=GMT%2B8&&useSSL=false
# 数据库用户名
spring.datasource.username=root
# 数据库密码
spring.datasource.password=root
# 数据库驱动（java类包）
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
###################以下为druid增加的配置###########################   

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中  
# 连接池初始化大小  
spring.datasource.initialSize=50
# 连接池最小值
spring.datasource.minIdle=5
# 连接池最大 值
spring.datasource.maxActive=1000
# 配置获取连接等待超时的时间  
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒  
spring.datasource.minEvictableIdleTimeMillis=300000
# 用来验证数据库连接的查询语句,这个查询语句必须是至少返回一条数据的SELECT语句
spring.datasource.validationQuery=SELECT 1 FROM DUAL
# 检测连接是否有效
spring.datasource.testWhileIdle=true
# 申请连接时执行validationQuery检测连接是否有效。做了这个配置会降低性能。
spring.datasource.testOnBorrow=true
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnReturn=true
# 是否缓存preparedStatement，也就是PSCache。打开PSCache  
spring.datasource.poolPreparedStatements=true
# 指定每个连接上PSCache的大小。要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙  
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录  
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

##########Druid控制台配置##############
# 记录慢SQL
spring.datasource.logSlowSql=true
